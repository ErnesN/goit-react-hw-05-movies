{"version":3,"file":"static/js/661.f2cf02ec.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAM,UAAMH,EAAN,WAECI,EAAkB,mCAAG,uGAAOC,EAAP,+BAAc,EAAd,SACnBC,EAAAA,EAAAA,IAAA,UACRL,EADQ,oBACaF,EADb,iBAC6BM,EAD7B,oBADmB,mFAAH,qDAMlBE,EAAa,mCAAG,WAAMC,GAAN,iFACdF,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBK,EAAtB,oBAAoCT,EAApC,oBADc,mFAAH,sDAIbU,EAAgB,mCAAG,WAAOC,GAAP,0FAAoBL,EAApB,+BAA2B,EAA3B,SACjBC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,oBACcH,EADd,kBAC+BW,EAD/B,iBACmDL,EADnD,oBADiB,mFAAH,sDAMhBM,EAAiB,mCAAG,WAAMH,GAAN,iFAClBF,EAAAA,EAAAA,IAAA,UACRH,GADQ,OACCK,EADD,4BACuBT,EADvB,oBADkB,mFAAH,sDAMjBa,EAAoB,mCAAG,WAAMJ,GAAN,iFACrBF,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBK,EAAtB,4BAA4CT,IADvB,mFAAH,qD,+IC7BjC,EAA4B,wBAA5B,EAA+D,uBAA/D,EAAiG,uBAAjG,EAAyI,6BAAzI,EAAsL,4BAAtL,EAAkO,4BAAlO,EAAmR,iC,SCkEnR,EA1Da,WACX,OAAwBc,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,6FACnBN,GAAW,GADQ,mBAGMN,EAAAA,EAAAA,IAAkBS,GAHxB,gBAGTI,EAHS,EAGTA,KACRT,EAAQS,EAAKV,MAJI,gDAMjBK,EAAS,KAAMM,SANE,yBAQjBR,GAAW,GARM,4EAAH,qDAWlBM,EAAaH,EACd,GAAE,CAACA,IAEJ,IAAMM,EAAc,OAAGZ,QAAH,IAAGA,OAAH,EAAGA,EAAMa,KAC3B,YAAiD,IAA9CC,EAA6C,EAA7CA,QAASC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC3B,OACE,gBAAkBC,UAAWC,EAA7B,WACE,0BACE,gBACEC,IACmB,OAAjBH,EACI,kHADJ,yCAEsCA,GAExCI,IAAI,GACJH,UAAWC,OAGf,iBAAKD,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SAAuCJ,KACvC,iBAAKG,UAAWC,EAAhB,+DACaH,UAfRF,EAoBZ,IAGH,OACE,4BACE,eAAII,UAAWC,EAAf,yGACCjB,IAAW,SAACoB,EAAA,EAAD,IACXlB,IAAS,uBAAIA,EAAMO,WACpB,eAAIO,UAAWC,EAAf,SAAiCP,MAGtC,C","sources":["components/services/themoviedb-api.js","webpack://react-homework-template/./src/pages/Cast/cast.module.scss?3c4a","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f051455512c484509b6d393ae9816298';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\nexport const fetchTrendingFilms = async (page = 1) => {\n  return await axios.get(\n    `${TREND_URL}?api_key=${API_KEY}&page=${page}&language=uk-UA`\n  );\n};\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}&language=uk-UA`);\n};\n\nexport const fetchSearchFilms = async (searchQuery, page = 1) => {\n  return await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}&language=uk-UA`\n  );\n};\n\nexport const fetchCastFilmToId = async id => {\n  return await axios.get(\n    `${ID_URL}${id}/credits?api_key=${API_KEY}&language=uk-UA`\n  );\n};\n\nexport const fetchReviewsFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"castTitle\":\"cast_castTitle__8nz7f\",\"castList\":\"cast_castList__w9Z3z\",\"castItem\":\"cast_castItem__zb3bK\",\"castActorImage\":\"cast_castActorImage__oXwho\",\"castActorInfo\":\"cast_castActorInfo__rmV8K\",\"castActorName\":\"cast_castActorName__9WLNi\",\"castActorCharacter\":\"cast_castActorCharacter__vX9x1\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCastFilmToId } from 'components/services/themoviedb-api';\n\nimport Loader from 'components/Loader/Loader';\n\nimport styles from './cast.module.scss';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getCastMovie = async () => {\n      setLoading(true);\n      try {\n        const { data } = await fetchCastFilmToId(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getCastMovie(movieId);\n  }, [movieId]);\n\n  const renderCastList = cast?.map(\n    ({ cast_id, name, character, profile_path }) => {\n      return (\n        <li key={cast_id} className={styles.castItem}>\n          <div>\n            <img\n              src={\n                profile_path === null\n                  ? 'https://static.vecteezy.com/system/resources/previews/005/337/799/original/icon-image-not-found-free-vector.jpg'\n                  : `https://image.tmdb.org/t/p/w500${profile_path}`\n              }\n              alt=\"\"\n              className={styles.castActorImage}\n            />\n          </div>\n          <div className={styles.castActorInfo}>\n            <div className={styles.castActorName}>{name}</div>\n            <div className={styles.castActorCharacter}>\n              Персонаж: {character}\n            </div>\n          </div>\n        </li>\n      );\n    }\n  );\n\n  return (\n    <div>\n      <h3 className={styles.castTitle}>Акторський склад</h3>\n      {loading && <Loader />}\n      {error && <p>{error.massage}</p>}\n      <ul className={styles.castList}>{renderCastList}</ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","axios","fetchFilmToId","id","fetchSearchFilms","searchQuery","fetchCastFilmToId","fetchReviewsFilmToId","useState","cast","setCast","loading","setLoading","error","setError","movieId","useParams","useEffect","getCastMovie","data","massage","renderCastList","map","cast_id","name","character","profile_path","className","styles","src","alt","Loader"],"sourceRoot":""}