{"version":3,"file":"static/js/961.944674d7.chunk.js","mappings":"+SAEMA,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wBACTE,EAAU,UAAMF,EAAN,iBACVG,EAAM,UAAMH,EAAN,WAECI,EAAkB,mCAAG,uGAAOC,EAAP,+BAAc,EAAd,SACnBC,EAAAA,EAAAA,IAAA,UACRL,EADQ,oBACaF,EADb,iBAC6BM,EAD7B,oBADmB,mFAAH,qDAMlBE,EAAa,mCAAG,WAAMC,GAAN,iFACdF,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBK,EAAtB,oBAAoCT,EAApC,oBADc,mFAAH,sDAIbU,EAAgB,mCAAG,WAAOC,GAAP,0FAAoBL,EAApB,+BAA2B,EAA3B,SACjBC,EAAAA,EAAAA,IAAA,UACRJ,EADQ,oBACcH,EADd,kBAC+BW,EAD/B,iBACmDL,EADnD,oBADiB,mFAAH,sDAMhBM,EAAiB,mCAAG,WAAMH,GAAN,iFAClBF,EAAAA,EAAAA,IAAA,UACRH,GADQ,OACCK,EADD,4BACuBT,EADvB,oBADkB,mFAAH,sDAMjBa,EAAoB,mCAAG,WAAMJ,GAAN,iFACrBF,EAAAA,EAAAA,IAAA,UAAaH,GAAb,OAAsBK,EAAtB,4BAA4CT,IADvB,mFAAH,qD,sIC7BjC,EAAwB,yB,SCwCxB,EAhCiB,WACf,OAA0Bc,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,mCAAG,sGAErBJ,GAAW,GAFU,UAGEb,EAAAA,EAAAA,MAHF,gBAGbkB,EAHa,EAGbA,KACRP,EAASO,EAAKC,SAJO,gDAMrBJ,EAAS,KAAMK,SANM,yBAQrBP,GAAW,GARU,4EAAH,qDAWtBI,GACD,GAAE,KAGD,4BACE,eAAII,UAAWC,EAAf,0GACCV,IAAW,SAACW,EAAA,EAAD,IACXT,IAAS,uBAAIA,EAAMM,UACnBV,EAAMc,OAAS,IACd,SAAC,IAAD,CAAWd,MAAOA,EAAOE,QAASA,EAASE,MAAOA,MAIzD,C","sources":["components/services/themoviedb-api.js","webpack://react-homework-template/./src/pages/HomePage/home-page.module.scss?a2f2","pages/HomePage/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f051455512c484509b6d393ae9816298';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\nexport const fetchTrendingFilms = async (page = 1) => {\n  return await axios.get(\n    `${TREND_URL}?api_key=${API_KEY}&page=${page}&language=uk-UA`\n  );\n};\n\nexport const fetchFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}?api_key=${API_KEY}&language=uk-UA`);\n};\n\nexport const fetchSearchFilms = async (searchQuery, page = 1) => {\n  return await axios.get(\n    `${SEARCH_URL}?api_key=${API_KEY}&query=${searchQuery}&page=${page}&language=uk-UA`\n  );\n};\n\nexport const fetchCastFilmToId = async id => {\n  return await axios.get(\n    `${ID_URL}${id}/credits?api_key=${API_KEY}&language=uk-UA`\n  );\n};\n\nexport const fetchReviewsFilmToId = async id => {\n  return await axios.get(`${ID_URL}${id}/reviews?api_key=${API_KEY}`);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"home-page_title__RLZyB\"};","import { useState, useEffect } from 'react';\n\nimport { fetchTrendingFilms } from 'components/services/themoviedb-api';\n\nimport MovieList from 'components/Loader/Loader';\nimport Loader from 'components/Loader/Loader';\n\nimport styles from './home-page.module.scss';\n\nconst HomePage = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const getTrendingFilms = async () => {\n      try {\n        setLoading(true);\n        const { data } = await fetchTrendingFilms();\n        setItems(data.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    getTrendingFilms();\n  }, []);\n\n  return (\n    <div>\n      <h2 className={styles.title}>У тренді сьогодні</h2>\n      {loading && <Loader />}\n      {error && <p>{error.message}</p>}\n      {items.length > 0 && (\n        <MovieList items={items} loading={loading} error={error} />\n      )}\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["API_KEY","BASE_URL","TREND_URL","SEARCH_URL","ID_URL","fetchTrendingFilms","page","axios","fetchFilmToId","id","fetchSearchFilms","searchQuery","fetchCastFilmToId","fetchReviewsFilmToId","useState","items","setItems","loading","setLoading","error","setError","useEffect","getTrendingFilms","data","results","message","className","styles","Loader","length"],"sourceRoot":""}